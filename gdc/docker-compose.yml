version: '3.6'
services:

# ---------- DATABASES ----------
  mysql56:
    hostname: db
    image: mysql:5.6
    restart: always
    ports:
        - "3307:3306"
    volumes:
        - mysql56-data:/var/lib/mysql
        - /tmp:/tmp
    environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
    command: --secure-file-priv=''

  mysql57:
    hostname: db
    image: mysql:5.7
    restart: always
    ports:
        - "3306:3306"
    volumes:
        - mysql57-data:/var/lib/mysql
        - /tmp:/tmp
    environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
    command: --secure-file-priv=''

  mysql8:
    hostname: db
    image: mysql:8
    restart: always
    ports:
        - "3308:3306"
    volumes:
        - mysql8-data:/var/lib/mysql
    environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
    command: mysqld --default-authentication-plugin=mysql_native_password

# ---------- REDIS ----------

  redis:
    image: redis
    hostname: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: ["redis-server", "--appendonly", "yes"]

  redisinsight:
    image: redislabs/redisinsight:latest
    volumes:
      - redisinsight:/db
    ports:
      - "8001:8001"

# ---------- KAFKA ----------

  kafka:
    image: lensesio/box
    environment:
      ADV_HOST: ${KAFKA_ADV_HOST:-127.0.0.1}
      EULA: ${LENSES_KEY}
      DISABLE_JMX: 1
      ELASTICSEARCH_PORT: 0
      SAMPLEDATA: 0
    ports:
      - "9092:9092"
      - "8081:8081"
      - "3030:3030"
      - "9991:9991"
      - "2181:2181"

  mailcatcher:
    image: yappabe/mailcatcher
    ports:
      - "1080:1080"
      - "1025:1025"

# ---------- AWS ----------

  dynamodb:
    user: root
    image: amazon/dynamodb-local
    command: -jar DynamoDBLocal.jar -sharedDb -dbPath /home/dynamodblocal/data/
    hostname: dynamodb-local
    ports:
      - "8000:8000"
    volumes:
      - dynamodb-data:/home/dynamodblocal/data

  dynamodb-admin:
    image: aaronshaf/dynamodb-admin
    ports:
      - "8099:8001"
    depends_on:
      - dynamodb
    environment:
      DYNAMO_ENDPOINT: http://dynamodb-local:8000

# ---------- OpenSearch ----------
  opensearch:
    image: opensearchproject/opensearch:2
    environment:
      - cluster.name=opensearch-cluster # Name the cluster
      - node.name=opensearch # Name the node that will run in this container
      - discovery.seed_hosts=opensearch # Nodes to look for when discovering the cluster
      - cluster.initial_cluster_manager_nodes=opensearch # Nodes eligibile to serve as cluster manager
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
      - "DISABLE_INSTALL_DEMO_CONFIG=true" # Prevents execution of bundled demo script which installs demo certificates and security configurations to OpenSearch
      - "DISABLE_SECURITY_PLUGIN=true" # Disables security plugin
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    volumes:
      - opensearch-data:/usr/share/opensearch/data # Creates volume called opensearch-data and mounts it to the container
    ports:
      - 9200:9200 # REST API
      - 9600:9600 # Performance Analyzer

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2
    ports:
      - 5601:5601 # Map host port 5601 to container port 5601
    environment:
      - 'OPENSEARCH_HOSTS=["http://opensearch:9200"]'
      - "DISABLE_SECURITY_DASHBOARDS_PLUGIN=true" # disables security dashboards plugin in OpenSearch Dashboards


volumes:
  mysql56-data:
  mysql57-data:
  mysql8-data:
  redis-data:
  redisinsight:
  dynamodb-data:
  opensearch-data:
